buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'docker'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.flight.route'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

bootRun {
    sourceResources sourceSets.main
    main = 'com.flight.route.application.FlightRouteApplication'
}

bootJar {
    mainClassName = 'com.flight.route.application.FlightRouteApplication'
    baseName = 'flight_route'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    }
    compile('org.springframework.data:spring-data-envers:1.1.6.RELEASE')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    runtime('org.postgresql:postgresql:42.1.1')
    compileOnly('org.projectlombok:lombok:1.18.0')
    compile('org.modelmapper:modelmapper:2.0.0')
    compile('io.springfox:springfox-swagger2:2.4.0')
    compile('io.springfox:springfox-swagger-ui:2.4.0')
    runtime('org.springframework.boot:spring-boot-starter-tomcat')
    runtime('org.springframework.boot:spring-boot-properties-migrator')
    compile('org.hibernate:hibernate-hikaricp:5.2.11.Final')
            {
                exclude group: 'com.zaxxer', module: 'HikariCP'
                exclude group: 'org.hibernate', module: 'hibernate-core'
            }
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
}

compileJava.dependsOn(processResources)

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = bootJar.baseName
    tagVersion = bootJar.version
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from bootJar
            into stageDir
        }
    }
}